import os
import lit.util
import lit.formats

# From libcxx lit: Tell pylint that we know config and lit_config exist somewhere.
if "PYLINT_IMPORT" in os.environ:
    config = object()
    lit_config = object()

config.name = "cucorrTest"

loaded_site_cfg = getattr(config, "loaded_site_config", False)
if not loaded_site_cfg:
    site_cfg = lit_config.params.get("cucorr_site_config", None)
    if site_cfg and os.path.exists(site_cfg):
        lit_config.load_config(config, site_cfg)
        raise SystemExit

config.test_format = lit.formats.ShTest(execute_external=True)
config.suffixes = [".c", ".cpp"]
config.excludes = ["Inputs"]

cucorr_lib_dir = getattr(config, "cucorr_lib_dir", None)
cucorr_pass_dir = getattr(config, "cucorr_pass_dir", None)
cucorr_pass_name = getattr(config, "cucorr_pass", None)
cucorr_runtime_dir = getattr(config, "cucorr_runtime_dir", None)
cucorr_script_dir = getattr(config, "cucorr_script_dir", None)

cucorr_std_args = "-cucorr"
cucorr_pass = "{}/{}".format(cucorr_pass_dir, cucorr_pass_name)
to_llvm_args = "-O1 -g -Xclang -disable-llvm-passes -S -emit-llvm -o -"

clang_cpp = getattr(config, "clang_cpp", "clang++")
clang_cc = getattr(config, "clang", "clang")
llc = getattr(config, "llc", "llc")
filecheck = getattr(config, "filecheck", "FileCheck")
if config.opt_args:
    opt = "{} {}".format(getattr(config, "opt", "opt"), config.opt_args)
else:
    opt = "{}".format(getattr(config, "opt", "opt"))

config.substitutions.append(("%clang-cpp", clang_cpp))
config.substitutions.append(("%clang-cc", clang_cc))
config.substitutions.append(("%opt", opt))
config.substitutions.append(("%filecheck", filecheck))

config.substitutions.append(("%lib_dir", cucorr_lib_dir))
config.substitutions.append(("%pass_dir", cucorr_pass_dir))
if cucorr_runtime_dir is not None:
    config.substitutions.append(("%runtime_dir", cucorr_runtime_dir))

config.substitutions.append(("%pass_name", cucorr_pass_name))
config.substitutions.append(("%pass_plugin", cucorr_pass))

config.substitutions.append(("%arg_std", cucorr_std_args))

config.substitutions.append(
    ("%apply-cucorr", "{} -load {} {}".format(opt, cucorr_pass, cucorr_std_args))
)

config.substitutions.append(("%c-to-llvm", "{} {}".format(clang_cc, to_llvm_args)))
config.substitutions.append(("%cpp-to-llvm", "{} {}".format(clang_cpp, to_llvm_args)))

if cucorr_script_dir is not None:
    config.substitutions.append(("%script_dir", cucorr_script_dir))
    config.substitutions.append(("%run", "{}/run.sh".format(cucorr_script_dir)))
    config.substitutions.append(("%apply", "{}/apply.sh".format(cucorr_script_dir)))

config.substitutions.append(('%wrapper-cc', '{}/cucorr-clang-test'.format(cucorr_script_dir)))
config.substitutions.append(('%wrapper-cxx', '{}/cucorr-clang++-test'.format(cucorr_script_dir)))
config.substitutions.append(('%wrapper-mpicc', '{}/cucorr-mpicc-test'.format(cucorr_script_dir)))
config.substitutions.append(('%wrapper-mpicxx', '{}/cucorr-mpic++-test'.format(cucorr_script_dir)))
